<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.groupa15.mapper.ArticleMapper">

    <resultMap id="TagTypeList" type="TagTypeVo">
        <result property="typeName" column="typeName" />
        <collection property="tagName" ofType="String">
            <result column="tagName"/>
        </collection>
    </resultMap>

    <resultMap id="ArticleScreenshotMap" type="articleScreenshotVO">
        <association property="isFavourite"
                     javaType="Boolean"
                     select="queryIsFavourite"
                     column="{viewerId=viewer_id, articleId=id}"/>
    </resultMap>

    <select id="queryTagTypeList" resultMap="TagTypeList">
        SELECT a.name as tagName, b.name as typeName
        FROM student.tag a
                 INNER JOIN student.tag_type b
                            on a.type = b.id
    </select>

    <select id="queryIsFavourite" resultType="Boolean">
        SELECT EXISTS(
                SELECT 1
                FROM student.favourite_article f
                WHERE f.user_id = #{viewerId}
                AND f.article_id = #{articleId}
                )
    </select>

    <select id="queryIsHistory" resultType="java.lang.Boolean">
        SELECT EXISTS(
                SELECT 1
                FROM student.history_article h
                WHERE h.user_id = #{viewerId}
                AND h.article_id = #{articleId}
                )
    </select>

    <select id="selectArticlePageVoOfMode" resultMap="ArticleScreenshotMap">
        SELECT id,
               title,
               content,
               edit_time,
               create_time,
               a.editor_id,
               image,
               editor_name,
               avatar,
               #{viewerId} as viewer_id
        FROM (
                Select user_id as editor_id,
                       user_name as editor_name,
                       avatar
                FROM student.user
             ) as u
                LEFT JOIN student.article a
                ON a.editor_id = u.editor_id
        <if test="'all'.equals(mode)">

        </if>
        <if test="'mine'.equals(mode)">
        WHERE a.editor_id = #{viewerId}
        </if>
        <if test="'favourite'.equals(mode)">
                INNER JOIN student.favourite_article f
                ON a.id = f.article_id AND f.user_id = #{viewerId}
        </if>
        <if test="'history'.equals(mode)">
                INNER JOIN student.history_article f
                ON a.id = f.article_id AND f.user_id = #{viewerId}
        </if>
        ORDER BY a.create_time DESC
    </select>

</mapper>