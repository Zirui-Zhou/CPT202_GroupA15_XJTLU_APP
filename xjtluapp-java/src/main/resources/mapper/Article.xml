<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.groupa15.mapper.ArticleMapper">

    <resultMap id="TagTypeList" type="TagTypeVo">
        <result property="typeName" column="typeName" />
        <collection property="tagName" ofType="String">
            <result column="tagName"/>
        </collection>
    </resultMap>

    <resultMap id="ArticleScreenshotMap" type="articleScreenshotVO">
        <association property="isFavourite"
                     javaType="Boolean"
                     select="queryIsFavourite"
                     column="{viewerId=viewer_id, articleId=id}"/>
    </resultMap>

    <select id="queryTagTypeList" resultMap="TagTypeList">
        SELECT a.name as tagName, b.name as typeName
        FROM student.resource_tag a
                 INNER JOIN student.resource_tag_type b
                            on a.type = b.id
    </select>

    <select id="selectAllArticleTypes" resultType="ArticleTypeVO">
        SELECT * FROM student.article_type
    </select>

    <select id="queryIsFavourite" resultType="Boolean">
        SELECT EXISTS(
                SELECT 1
                FROM student.favourite_article f
                WHERE f.user_id = #{viewerId}
                AND f.article_id = #{articleId}
                )
    </select>

    <select id="queryIsHistory" resultType="java.lang.Boolean">
        SELECT EXISTS(
                SELECT 1
                FROM student.history_article h
                WHERE h.user_id = #{viewerId}
                AND h.article_id = #{articleId}
                )
    </select>

    <sql id="selectArticle">
        SELECT id, title, content, edit_time, create_time, a.editor_id, image,
               editor_name, avatar, type_id, #{viewerId} as viewer_id
        FROM (
                Select user_id as editor_id,
                       user_name as editor_name,
                       avatar
                FROM student.user
                ) as u
                    INNER JOIN student.article a
                    ON a.editor_id = u.editor_id
                    INNER JOIN student.article_type_list t
                    ON a.id = t.article_id
    </sql>

    <select id="selectArticlePageVo" resultMap="ArticleScreenshotMap">
        <include refid="selectArticle"/>
        ORDER BY a.create_time DESC
    </select>

    <select id="selectArticlePageVoOfFavourite" resultMap="ArticleScreenshotMap">
        <include refid="selectArticle"/>
        INNER JOIN student.favourite_article f
        ON a.id = f.article_id AND f.user_id = #{viewerId}
        ORDER BY a.create_time DESC
    </select>

    <select id="selectArticlePageVoOfHistory" resultMap="ArticleScreenshotMap">
        <include refid="selectArticle"/>
        INNER JOIN student.history_article h
        ON a.id = h.article_id AND h.user_id = #{viewerId}
        ORDER BY a.create_time DESC
    </select>

    <select id="selectArticlePageVoOfMine" resultMap="ArticleScreenshotMap">
        <include refid="selectArticle"/>
        WHERE a.editor_id = #{viewerId}
        ORDER BY a.create_time DESC
    </select>

    <select id="selectArticlePageVoOfType" resultMap="ArticleScreenshotMap">
        <include refid="selectArticle"/>
        WHERE t.type_id = #{typeId}
        ORDER BY a.create_time DESC
    </select>

    <select id="selectArticlePageVoOfKeyword" resultMap="ArticleScreenshotMap">
        <include refid="selectArticle"/>
        WHERE a.title LIKE '%${keyWord}%' OR u.editor_name LIKE '%${keyWord}%'
        ORDER BY a.create_time DESC
    </select>

</mapper>